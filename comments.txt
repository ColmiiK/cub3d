first_step_x:
printf("\n\t\tsaliendo del first_step_x:\n");
printf("\t\tdistance == %f\n\t\tdata->p_a == %f\n\t\tdist/tan(data->p_a) == %f", distance, data->p_a, distance / tan(data->p_a));
printf("\t\tvector_x == %d\n", tools->vector_x);
printf("\t\tfirst_x->x = %f\n\t\tfirst_x->y = %f\n\n", first_x->x, first_x->y);

first_step_y:
printf("\n\t\tsaliendo del first_step_y:\n");
printf("\t\tvector_y == %d\n", tools->vector_y);
printf("\t\tfirst_y->x = %f\n\t\tfirst_y->y = %f\n\n", first_y->x, first_y->y);

// printf("\t\tX_WALL_FINDER\n");
// printf("\t\tdistance_x = %f\n", tools->distance_x);
// printf("\t\tinitial coord: [%f][%f]\n", x_cross->x, x_cross->y);
// printf("\t\tcoord loop: [%f][%f]\n", x_cross->x, x_cross->y);
// printf("\t\tmap valor == %c\n", data->map[(int)x_cross->x][(int)x_cross->y]);

// printf("\t\tY_WALL_FINDER\n");
// printf("\t\tdistance_x = %f\n", tools->distance_y);
// printf("\t\tinitial coord: [%f][%f]\n", y_cross->x, y_cross->y);
// printf("\t\tcoord loop: [%f][%f]\n", y_cross->x, y_cross->y);
// printf("\t\tmap valor == %c\n", data->map[(int)y_cross->x][(int)y_cross->y]);

// printf("Entering first wall_finder\n\n\n");
// printf("x_cross == [%f][%f]\n\n\n", tools->x_cross->x, tools->x_cross->y);
// printf("y_cross == [%f][%f]\n\n\n", tools->y_cross->x, tools->y_cross->y);